#!/bin/bash

#alias ssh1='ssh s3543536@coreteaching01.csit.rmit.edu.au'
#alias ssh2='ssh s3543536@coreteaching02.csit.rmit.edu.au'
#alias ssh3='ssh s3543536@coreteaching03.csit.rmit.edu.au'
#alias sshfs1='sudo sshfs -o allow_other s3543536@coreteaching02.csit.rmit.edu.au: /mnt/core1'
#alias sshfs2='sudo sshfs -o allow_other s3543536@coreteaching02.csit.rmit.edu.au: /mnt/core2'
#alias sshfs3='sudo sshfs -o allow_other s3543536@coreteaching02.csit.rmit.edu.au: /mnt/core3'
#alias ct1='s3543536@coreteaching01.csit.rmit.edu.au'
#alias ct2='s3543536@coreteaching02.csit.rmit.edu.au'
#alias ct3='s3543536@coreteaching03.csit.rmit.edu.au'

alias gdeploy='gcloud app deploy'


#cat() {
#	LOC=$(/bin/cat)
#	if [[ -d $1 ]]; then
#		command ls $@
#	else
#		command $LOC $@
#	fi
#}

which() {
	LOC=$(/usr/bin/which $@)
	if [[ $LOC != "" ]]; then
		command ls -ahl $LOC --color
	fi
}

alias ip='/usr/bin/ip -color'
alias dmesg='/usr/bin/dmesg --color=always'

watch() {
	command watch -c $@
}

#ip() {
	#command ip -c $@
#}

grep() {
	command grep --color=always $@
}

pacman() {
	command pacman --color=always $@
}

#cd() {
	#command cd -P $@
#}


xclip() {
	command xclip -selection clip-board $@
}

#always give me colour with ls
ls() {
	#calling command supresses the function lookup so we don't get an infinite loop
	command ls -hp --color=always $@
}

#give me more info about the file, like if its a symlink
which() {
	LOC=$(command which $@)
	if [[ -f $LOC ]]; then
		#don't want to call "ls" with command.
		#we want it to use the above "ls" function
		ls -al $LOC
	fi
}

less() {
	command less -R $@
}

#if i choose git graph, make it pretty
git() {
	if [[ $@ == *" graph"* ]]; then
		command git log "$@" --graph --all --decorate
	else
		command git "$@"
	fi
}

#shorcut to re-run the previous command with sudo (doesn't always work)
alias please='sudo $(history -p !!)'
