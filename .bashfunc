

# We still need this.
windows() { [[ -n "$WINDIR" ]]; }

# Cross-platform symlink function. With one parameter, it will check
# whether the parameter is a symlink. With two parameters, it will create
# a symlink to a file or directory, with syntax: link $linkname $target
link() {
    if [[ -z "$1" ]]; then
        # Link-checking mode.
        if windows; then
            fsutil reparsepoint query "$2" > /dev/null
        else
            [[ -h "$2" ]]
        fi
    else
        # Link-creation mode.
        if windows; then
            # Windows needs to be told if it's a directory or not. Infer that.
            # Also: note that we convert `/` to `\`. In this case it's necessary.
            if [[ -d "$1" ]]; then
                cmd <<< "mklink /D \"$2\" \"${2//\//\\}\"" > /dev/null
            else
                cmd <<< "mklink \"$2\" \"${2//\//\\}\"" > /dev/null
            fi
        else
            ln -s "$1" "$2"
        fi
    fi
}
